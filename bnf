/******************************************************************************
 * author  : lukas singer <lukas42singer (at) gmail (dot) com>
 * created : 2015/01/22
 * brief   : defines the grammar
 *
 * readme  : this is an bnf-style syntax description.
 *           the bnf is a little bit modified (some ideas of regexes, ...).
 *           names surrounded by "<" and ">" are non terminal symbols.
 *           non terminal symbols must be defined in this document.
 *           non terminal symbols may only contain letters ("a" - "z") and "-".
 *           the non terminal symbol on the left of a "::=" will be defined
 *           by a list of terminal and/or non terminal symbols on the right
 *           side of the "::=".
 *           a terminal symbol is an quoted c-style string.
 *           a list is a series of terminal and/or non terminal symbols
 *           seperated by "|" (without quotes).
 *           a list surrounded by "[" and "]" represents non or one of the
 *           elements in the list.
 *           a list surrounded by "[" and "]" followed by "+" represents one
 *           or more (arbitrary many) of the elements in the list.
 *           a list surrounded by "[" and "]" followed by "*" represents non,
 *           one or more (arbitrary many) of the elements in the list.
 *           a list surrounded by "(" and ")" or not surrounded by anything
 *           represents exactly one element in the list.
 *           empty lists (f.e. "[]", "[|]", "()", "(|)") are not allowed.
 *           every definition ends with a blank line.
 *           comments are allowed everywhere except inside of non terminal or
 *           terminal symbols.
 *           comments are traditional c-style comments. a comment starts with
 *           "/" followed by "*" and ends with "*" followed by "/".
 *
 *****************************************************************************/

<program> ::= [ <statement> ]*

<statement> ::= <assignment> ";"
              | <conditional>
              | <loop>
              | <call> ";"

<assignment> ::= ( <identifier> | "@" ) "=" ( <function> | <expression> )

<expression> ::= <term> (
                   ">" | "<" | ">=" | "<=" | "==" |
                   "!=" | "$" | "|" | "+" | "-"
                 ) <expression>
               | <term>

<term> ::= <term> ( "&" | "/" | "*" | "%" ) <factor>
         | <factor>

<factor> ::= <integer>
           | <double>
           | <bool>
           | <string>
           | <identifier>
           | <call>
           | <list>
           | <dict>
           | "(" <expression> ")"

<conditional> ::= <if_statement> [ <elif_statement> ]* [ <else_statement> ]

<if_statement> ::= "if" "(" <expression> ")" <block>

<elif_statement> ::= "elif" "(" <expression> ")" <block>

<else_statement> ::= "else" <block>

<loop> ::= "while" "(" <expression> ")" <block>
         | "do" <block> "while" "(" <expression> ")"
         | "for" "(" <identifier> "," <expression> ")" <block>

<block> ::= "{" <statements> "}"

<call> ::= ( <identifier> | <function> ) "(" <callargs> ")"

<callargs> ::= [ <expression> [ "," <expression> ]* ]

<function> ::= "@" "(" <params> ")" <block>

<params> ::= [ <identifier> [ "," <identifier> ]* ]

<identifier> ::= "@"
               | (<letters> | "_") [<letters> | "_" | <numerals>]*

<bool> ::= "true"
         | "false"

<string> ::= "\"" [ <letters> | <numerals> | <special-chars> ]* "\""

<double> ::= <integer> "." [<numerals>]+

<integer> ::= "-" <pos-integer>
            | <pos-integer>

<list> ::= "[" [ <expression> [ "," <expression> ]* ] "]"

<dict> ::= "[" [ <key-value> [ "," <key-value> ]* ] "]"

<key-value> ::= <expression> ":" <expression>

<pos-integer> ::= <zero>
                | <non-zero-numerals> [<numerals>]*

<numerals> ::= <zero>
             | <non-zero-numerals>

<non-zero-numerals> ::= "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"

<zero> ::= "0"

<letters> ::= <lower-case-letters>
            | <upper-case-letters>

<lower-case-letters> ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i"
                       | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r"
                       | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"

<upper-case-letters> ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I"
                       | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R"
                       | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"

<special-chars> ::= "!" | "ยง" | "$" | "%" | "&" | "/" | "(" | ")" | "=" | "?"
                  | "*" | "+" | "'" | "#" | "-" | "_" | "." | ":" | "," | ";"
                  | /* all printable ascii chars */

